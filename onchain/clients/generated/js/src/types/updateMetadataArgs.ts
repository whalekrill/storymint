/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/web3.js';

export type UpdateMetadataArgs = { name: Option<string>; uri: Option<string> };

export type UpdateMetadataArgsArgs = {
  name: OptionOrNullable<string>;
  uri: OptionOrNullable<string>;
};

export function getUpdateMetadataArgsEncoder(): Encoder<UpdateMetadataArgsArgs> {
  return getStructEncoder([
    [
      'name',
      getOptionEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
    [
      'uri',
      getOptionEncoder(addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())),
    ],
  ]);
}

export function getUpdateMetadataArgsDecoder(): Decoder<UpdateMetadataArgs> {
  return getStructDecoder([
    [
      'name',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
    [
      'uri',
      getOptionDecoder(addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())),
    ],
  ]);
}

export function getUpdateMetadataArgsCodec(): Codec<
  UpdateMetadataArgsArgs,
  UpdateMetadataArgs
> {
  return combineCodec(
    getUpdateMetadataArgsEncoder(),
    getUpdateMetadataArgsDecoder()
  );
}
