/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/web3.js';
import { STORYMINT_PROGRAM_ADDRESS } from '../programs';

/** InvalidAuthority: Invalid authority */
export const STORYMINT_ERROR__INVALID_AUTHORITY = 0x1770; // 6000
/** InvalidVaultBalance: Invalid vault balance */
export const STORYMINT_ERROR__INVALID_VAULT_BALANCE = 0x1771; // 6001
/** UnauthorizedUpdate: Unauthorized metadata update */
export const STORYMINT_ERROR__UNAUTHORIZED_UPDATE = 0x1772; // 6002
/** MaxSupplyReached: Maximum supply reached */
export const STORYMINT_ERROR__MAX_SUPPLY_REACHED = 0x1773; // 6003
/** InvalidCollection: Invalid collection data */
export const STORYMINT_ERROR__INVALID_COLLECTION = 0x1774; // 6004
/** Overflow: Arithmetic overflow */
export const STORYMINT_ERROR__OVERFLOW = 0x1775; // 6005
/** Underflow: Arithmetic underflow */
export const STORYMINT_ERROR__UNDERFLOW = 0x1776; // 6006
/** InvalidUpdateAuthority: Invalid update authority */
export const STORYMINT_ERROR__INVALID_UPDATE_AUTHORITY = 0x1777; // 6007
/** InvalidMetadataUpdate: Invalid metadata update */
export const STORYMINT_ERROR__INVALID_METADATA_UPDATE = 0x1778; // 6008

export type StorymintError =
  | typeof STORYMINT_ERROR__INVALID_AUTHORITY
  | typeof STORYMINT_ERROR__INVALID_COLLECTION
  | typeof STORYMINT_ERROR__INVALID_METADATA_UPDATE
  | typeof STORYMINT_ERROR__INVALID_UPDATE_AUTHORITY
  | typeof STORYMINT_ERROR__INVALID_VAULT_BALANCE
  | typeof STORYMINT_ERROR__MAX_SUPPLY_REACHED
  | typeof STORYMINT_ERROR__OVERFLOW
  | typeof STORYMINT_ERROR__UNAUTHORIZED_UPDATE
  | typeof STORYMINT_ERROR__UNDERFLOW;

let storymintErrorMessages: Record<StorymintError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  storymintErrorMessages = {
    [STORYMINT_ERROR__INVALID_AUTHORITY]: `Invalid authority`,
    [STORYMINT_ERROR__INVALID_COLLECTION]: `Invalid collection data`,
    [STORYMINT_ERROR__INVALID_METADATA_UPDATE]: `Invalid metadata update`,
    [STORYMINT_ERROR__INVALID_UPDATE_AUTHORITY]: `Invalid update authority`,
    [STORYMINT_ERROR__INVALID_VAULT_BALANCE]: `Invalid vault balance`,
    [STORYMINT_ERROR__MAX_SUPPLY_REACHED]: `Maximum supply reached`,
    [STORYMINT_ERROR__OVERFLOW]: `Arithmetic overflow`,
    [STORYMINT_ERROR__UNAUTHORIZED_UPDATE]: `Unauthorized metadata update`,
    [STORYMINT_ERROR__UNDERFLOW]: `Arithmetic underflow`,
  };
}

export function getStorymintErrorMessage(code: StorymintError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (storymintErrorMessages as Record<StorymintError, string>)[code];
  }

  return 'Error message not available in production bundles.';
}

export function isStorymintError<TProgramErrorCode extends StorymintError>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    STORYMINT_PROGRAM_ADDRESS,
    code
  );
}
